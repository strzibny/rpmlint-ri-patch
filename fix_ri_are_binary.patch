From 2e1e07dda04c60ab0007380a8512491288b0117a Mon Sep 17 00:00:00 2001
From: Josef Strzibny <strzibny@dhcp-25-242.brq.redhat.com>
Date: Wed, 22 Aug 2012 09:13:02 +0200
Subject: [PATCH] ri

---
 FilesCheck.py | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/FilesCheck.py b/FilesCheck.py
index 147311c..7ebbc5f 100644
--- a/FilesCheck.py
+++ b/FilesCheck.py
@@ -252,6 +252,12 @@ fsf_wrong_address_regex = re.compile('(675\s+Mass\s+Ave|59\s+Temple\s+Place|Fran
 text_characters = "".join(map(chr, range(32, 127)) + list("\n\r\t\b"))
 _null_trans = string.maketrans("", "")
 
+def is_ri_file(filename):
+    """Returns true if filename is Ruby index (RI) binary file"""
+    if re.search(r'.*ri\/.*\.ri$', filename.lower()):
+        return True
+    return False
+
 def peek(filename, pkg, length=1024):
     """Peek into a file, return a chunk from its beginning and a flag if it
        seems to be a text file."""
@@ -273,6 +279,10 @@ def peek(filename, pkg, length=1024):
     if not chunk:  # Empty files are considered text
         return (chunk, True)
 
+    # RI files generated by RDoc are always binary
+    if is_ri_file(filename):
+        return (chunk, False)
+
     # PDF's are binary but often detected as text by the algorithm below
     if filename.lower().endswith('.pdf') and chunk.startswith('%PDF-'):
         return (chunk, False)
@@ -424,6 +434,10 @@ class FilesCheck(AbstractCheck.AbstractCheck):
             nonexec_file = False
 
             for match in AbstractCheck.macro_regex.findall(f):
+                # RI files can have question mark, exclamation mark, pipe, ampersand, plus,
+                # and other special characters in their name
+                if is_ri_file(f) and re.search(r'\%.+', f):
+                    continue
                 printWarning(pkg, 'unexpanded-macro', f, match)
             if standard_users and user not in standard_users:
                 printWarning(pkg, 'non-standard-uid', f, user)
-- 
1.7.11.2

